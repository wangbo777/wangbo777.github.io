<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Deer new blog</title>
  
  <subtitle>welcome to my blog</subtitle>
  <link href="https://wangbo777.github.io/atom.xml" rel="self"/>
  
  <link href="https://wangbo777.github.io/"/>
  <updated>2024-09-09T07:33:12.731Z</updated>
  <id>https://wangbo777.github.io/</id>
  
  <author>
    <name>Mr Deer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wangbo777.github.io/2024/10/23/hello-world/"/>
    <id>https://wangbo777.github.io/2024/10/23/hello-world/</id>
    <published>2024-10-23T10:56:56.557Z</published>
    <updated>2024-09-09T07:33:12.731Z</updated>
    
    <content type="html"><![CDATA[<hr><span id="more"></span><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【Bncr】无界3.0新手教程-Deer</title>
    <link href="https://wangbo777.github.io/2024/10/08/%E3%80%90Bncr%E3%80%91%E6%97%A0%E7%95%8C3%200%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B-Deer/"/>
    <id>https://wangbo777.github.io/2024/10/08/%E3%80%90Bncr%E3%80%91%E6%97%A0%E7%95%8C3%200%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B-Deer/</id>
    <published>2024-10-08T14:35:24.000Z</published>
    <updated>2024-10-23T12:50:28.261Z</updated>
    
    <content type="html"><![CDATA[<hr><span id="more"></span><h2 id="特殊说明"><a href="#特殊说明" class="headerlink" title="特殊说明"></a><strong>特殊说明</strong></h2><p>无界的上手难度不算低，大家尽力而为，有问题<strong>带着截图</strong>去群里问。</p><p><a href="https://t.me/BncrJSChat">https://t.me/BncrJSChat</a></p><p><strong>本教程参考以下大佬做一个集成</strong></p><p><a href="https://lmu5.com/bncr.html">【Bncr】Linux/群晖搭建无界Docker和部分报错解决教程</a></p><p><a href="https://www.notion.so/faa6066b401b491885728f9aedbe09db?pvs=21">【Bncr】无界3.0新手教程</a></p><p><a href="https://blog.csdn.net/2302_81707133/article/details/141056393">Bncr 无界3.0安装教程</a></p><p><a href="https://notes.dsdog.tk/archives/1716304583708">从零开始的无界3.0 - 单身汪</a></p><h3 id="为什么用无界？"><a href="#为什么用无界？" class="headerlink" title="为什么用无界？"></a>为什么用无界？</h3><p>1、用bot后台对接登录，有效防止网站被DDOS。韭菜可以直接在机器人内绑定账号，每日查询资产变动。</p><p>2、线报监控和解析变得更智能。</p><p>点击查看<a href="https://bncr.dsdog.tk/">无界服务状态</a></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>本教程系统适用于所有Linux系统（云服务器家宽均可）,本次教程使用<a href="https://www.debian.org/index.zh-cn.html">Debian12</a>（本地服务器），其他系统大同小异</p><p>安装无界需要服务器安装docker，这个自己安装就行了。宝塔可以一键安装，1panel也是一键安装，这里不多赘述。</p><p>这里推荐大家使用<a href="https://blog.kejilion.pro/kejilion-sh/"><strong>科技lion一键脚本 Linux服务器运维工具箱 监控管理建站一个脚本全搞定！</strong></a></p><h2 id="N0-1-安装Bncr3-0并登录"><a href="#N0-1-安装Bncr3-0并登录" class="headerlink" title="N0.1 安装Bncr3.0并登录"></a><strong>N0.1 安装Bncr3.0并登录</strong></h2><h3 id="https-t-me-BncrJSChat"><a href="#https-t-me-BncrJSChat" class="headerlink" title="https://t.me/BncrJSChat"></a><a href="https://t.me/BncrJSChat">https://t.me/BncrJSChat</a></h3><p>先去机器人 <a href="https://t.me/red_Lights_Districts_Bot">https://t.me/red_Lights_Districts_Bot</a> </p><p>发送<code>/get_token</code> 获得token，保存下来。</p><p><img src="/images/bncr3.0/image.png"></p><p><del># 在你要存放数据的目录下手动新建BncrData文件夹</del></p><p><del># (以root目录为例)</del></p><p><del># 警告！群晖用户请勿在root下存放任何文件！修改成你的硬盘目录！</del></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~<span class="built_in">mkdir</span> /root/BncrData<span class="comment">#在root目录新建BncrData文件夹~~</span></span><br></pre></td></tr></tbody></table></figure><p>Docker安装，运行容器 并进入交互控制台 </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line"> -v /root/BncrData:/bncr/BncrData \</span><br><span class="line"> -p 9090:9090 \</span><br><span class="line"> --name bncr \</span><br><span class="line"> --hostname bncr \</span><br><span class="line"> --restart on-failure:5 \</span><br><span class="line"> --log-opt max-size=5m \</span><br><span class="line"> --log-opt max-file=3 \</span><br><span class="line">anmour/bncr &amp;&amp; docker attach bncr</span><br></pre></td></tr></tbody></table></figure><p>Docker compose安装代码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">version: "3"</span><br><span class="line">services:</span><br><span class="line">    bncr:</span><br><span class="line">        stdin_open: true</span><br><span class="line">        tty: true</span><br><span class="line">        volumes:</span><br><span class="line">            - ./data:/bncr/BncrData</span><br><span class="line">        network_mode: host</span><br><span class="line">        container_name: bncr</span><br><span class="line">        hostname: bncr</span><br><span class="line">        restart: on-failure:5</span><br><span class="line">        image: anmour/bncr</span><br><span class="line">Copy</span><br></pre></td></tr></tbody></table></figure><p>注意：Docker compose模式下安装可能存在ssh控制台无法输入的情况</p><p>ps:进入容器交互控制台</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#进入</span><br><span class="line">docker attach bncr</span><br><span class="line"># 退出交互控制台</span><br><span class="line">Ctrl+p Ctrl+q</span><br></pre></td></tr></tbody></table></figure><p>默认鉴权URL无法使用，请前往</p><p><a href="https://bncr.dsdog.tk/">无界服务状态</a></p><p>获取鉴权地址，输入自定义鉴权URL后回车</p><p>然后输入从&nbsp;<a href="https://t.me/red_Lights_Districts_Bot">鉴权bot</a>&nbsp;获取的token</p><p>系统日志开关建议开</p><p>控制台消息等级建议第一项全开，以后配置好了再改</p><p>开发者模式建议开</p><p>以上设置后面可以去面板配置</p><h3 id="结构目录"><a href="#结构目录" class="headerlink" title="结构目录"></a>结构目录</h3><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Adapter ：适配器目录</span><br><span class="line"><span class="built_in">config</span> ：一些<span class="built_in">config</span>.json文件，用来存放鉴权，反代等数据</span><br><span class="line">db ：数据库，可用来备份或者迁移无界</span><br><span class="line">node_modules ：模块</span><br><span class="line">plugins ：插件目录</span><br><span class="line">public ：缓存的文件，图片或视频</span><br></pre></td></tr></tbody></table></figure><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a><strong>登录</strong></h3><p>浏览器打开 <a href="http://ip:9090/">http://ip:9090</a> 进入无界登录页面</p><p>一定要记得把9090端口去后台打开，一般阿里，腾讯，华为这些大厂都是防火墙的设置，自己找找也就找到了。假如说安装了宝塔，宝塔后台也要去打开。</p><p>在服务器终端输入：<code>docker attach bncr</code>&nbsp;进入容器内部. 或在拥有管理员的平台发送以下命令:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#设置账号：</span><br><span class="line">set system name 你的账号</span><br><span class="line"></span><br><span class="line">#设置密码，密码必须为6-18位数字/字符/符号，至少2种组合：</span><br><span class="line">set system password 你的密码</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>返回登录页登录，仪表盘首页的内存占用并不准确，不用在意</p><p>登录完成后按<code>Ctrl+p Ctrl+q</code> 可后台运行。</p><h1 id="NO-2-插件订阅"><a href="#NO-2-插件订阅" class="headerlink" title="NO.2 插件订阅"></a>NO.2 插件订阅</h1><p>在终端内输入</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach bncr</span><br></pre></td></tr></tbody></table></figure><p>然后去无界web页面。</p><h3 id="插件市场"><a href="#插件市场" class="headerlink" title="插件市场"></a>插件市场</h3><p>暂不支持分类，可以使用搜索</p><p>无界的具体功能都需要适配器/插件实现，首先下载适配器，方便对接各聊天平台，建议一次把需要的适配器下载完，因为适配器需要重启才能看到</p><h3 id="添加订阅"><a href="#添加订阅" class="headerlink" title="添加订阅"></a>添加订阅</h3><p>进入插件市场，右上角点击订阅按钮，默认已经订阅了官方插件</p><p><img src="https://imgs.dsdog.tk/file/2f8d94893433fc63a3b24.png" alt="https://imgs.dsdog.tk/file/2f8d94893433fc63a3b24.png"></p><p>点击右边加号添加其他大佬的订阅，点击减号删除订阅</p><p>个人建议，官方市场，红灯区一定要订阅，因为很多大佬的插件里的mod都是按照红灯区来写的</p><p>一些大佬的插件(排名不分先后)</p><p>官方市场</p><p><a href="https://github.com/Anmours/Bncr"><code>https://github.com/Anmours/Bncr</code></a></p><p>红灯区</p><p><a href="https://github.com/RedLightsDistrict/Bncr_plugins"><code>https://github.com/RedLightsDistrict/Bncr_plugins</code></a><br>D佬</p><p><code>bncrSub://UpdjUc6jid/ZFkJhEZFTW7g0Y5mwQGTOquKC0qQ3jQT64ov58iu9al29oSMuvxiCTRP7m7nb+GShLeXBM34f5alozVwSO6Rk83p/jSqH458=</code><br>寒佬</p><p><code>bncrsub://3BPeb/Ff4FlBAx372D99jdVghsmvkSgLBq9KU/hngTdwC2GEcEwqYWSWDYKb6RfikHZG1cRp8/VvIGJ786YOuBlGXSIKXzAA1klCLP7Pc80=</code></p><p>单身汪（无法访问GitHub的可以使用sub订阅）</p><p><a href="https://github.com/callacat/BncrJS_plugins"><code>https://github.com/callacat/BncrJS_plugins</code></a></p><p><code>bncrSub://3BPeb/Ff4FlBAx372D99jVyIKCqA1o+N6BGTODwfLTZrDM4RSZKoS4TbJlpyOm47YhEFvTGcZvorshRgSZRqhuvtZ5z6IIZiGB8EWGrtvD0=</code></p><p>小九九</p><p><a href="https://github.com/randomshit699/Bncr_plugins"><code>https://github.com/randomshit699/Bncr_plugins</code></a><br>胜利佬</p><p><code>bncrSub://4jZW6oPmVyXqvAZWhY1TV9wUaY1omNhbo/gx0gklBlfE/O29Z3xuEuPUMZJZ6nQKqnfbGOcfhtrMZuoyXlr6BvK3yhcuJoDn8QoAcBegu6c=</code><br>缘佬</p><p><code>bncrSub://3BPeb/Ff4FlBAx372D99jYvj+QZcN253M4hwNraBlDlkcHZ3Co50nPr36N+UPUwByGOOlBqx00VAtjamL5r6HbE7eOYTWuOnjVZCTZZmO68=</code><br>Merrickk</p><p><a href="https://github.com/Merrickk/BncrFiles"><code>https://github.com/Merrickk/BncrFiles</code></a><br>sumuen</p><p><a href="https://github.com/sumuen/Bncr_plugin"><code>https://github.com/sumuen/Bncr_plugin</code></a><br>枯花佬</p><p><code>bncrSub://hbq80RwrMDlTHxjzsPkUWY/ObH3eYsqVRJduerbj3VLqn6HIX9FDfEnjLxmP3tnDAbgZA/ZytDYXnMPDNs/6OgX6FJrZlwgu1yMKxaPkjdA=</code><br>无眠</p><p><a href="https://github.com/Womian/Wm_bncr_plugins"><code>https://github.com/Womian/Wm_bncr_plugins</code></a></p><p>JC</p><p><code>bncrsub://4jZW6oPmVyXqvAZWhY1TV70Us3xou/l8DG7lu3ZNncvutZqo60FBZE0z2J6GOSuHVZ0FmeN9AJAT67XqtEDvcQ==</code></p><p>三藏</p><p><a href="https://github.com/3zang/Bncr_plugins"><code>https://github.com/3zang/Bncr_plugins</code></a></p><p>October</p><p><code>bncrSub://3BPeb/Ff4FlBAx372D99jSgYAOp0iHTZYdXsiIPvd8Kv+n62AwCyJeSaLEwNILJPTolaQ/RxzeG3WMcOQzvUpkO+H+mnXr5+73k7J/jMjQA=</code></p><p>yuanter</p><p><code>bncrSub://UpdjUc6jid/ZFkJhEZFTW/8AQnqGof/eXGPt+fCsmJ31/6uffZxee3QzBTXMYrzPWdzsQ90+6RGUYrEfBlnRnsXejZuVbYXS1qVLK8a4tPI=</code></p><p>屁 啊</p><p><a href="https://github.com/lastbaigeiapi/Bncr_plugin"><code>https://github.com/lastbaigeiapi/Bncr_plugin</code></a></p><p>奖励</p><p><a href="https://github.com/CoverUp137/Bncr_plugin"><code>https://github.com/CoverUp137/Bncr_plugin</code></a></p><p>鑫仔</p><p><a href="https://github.com/seven-XINZ/bncr"><code>https://github.com/seven-XINZ/bncr</code></a></p><p>xmo</p><p><a href="https://github.com/xmoxmo/bncr"><code>https://github.com/xmoxmo/bncr</code></a></p><p>辰烬化思羽</p><p><code>bncrSub://3BPeb/Ff4FlBAx372D99jTC8Ri+Swd4INGfYEvPIfMhlNIUfgVosZXyb2EAcbjvLaaeQ6KyIc6nzm2ZmmXP/6v8Vz35tefgiutXDHOSqYYcOFE5m+pXCAfaBbn/oFutT</code></p><p>麦丽素佬</p><p><code>https://github.com/dandanainiyo/bncr_plugins/tree/main</code></p><h3 id="发布插件："><a href="#发布插件：" class="headerlink" title="发布插件："></a>发布插件：</h3><p>1、端对端 ：</p><p>以发布者的机器作为服务端载体</p><p>用户侧：</p><p>用户取得开发者订阅链接后在插件市场右上角设置中添加订阅源</p><p>开发侧：</p><p>·发布者把需要发布的插件@public字段改成true</p><p>·发布者需要在前端填写相关信息生成订阅插件发布于用户使用</p><p>·发布者可通过config/PluginCloudAuthentication.ts模块控制订阅行为（基于此模块，你可以实现订阅黑名单、白名单等操作）</p><p>2、GitHub模式 ：</p><p>用GitHub仓库为服务端</p><p>用户测</p><p>前端订阅源只需要填写仓库地址，例如<a href="https://github.com/Anmours/Bncr">https://github.com/Anmours/Bncr</a>&nbsp;，不要带/结尾</p><p>开发侧</p><p>·需要在config.json手动增加pluginsPublishingMode字段，值为：github</p><p>·当有public插件时，会在BncrData中生成publicFileIndex.json索引文件，</p><p>·需要将publicFileIndex.json和要发布的文件同步更新至GitHub</p><p>·或 cp Bncr仓库的.github/workflows文件夹到自己仓库，然后仓库需要开启 “Read and write permissions” 与 “Allow GitHub Actions to create and approve pull requests” 权限，更新文件后GitHub Actions将会自动生成索引在仓库根目录。</p><p>·发布GitHub仓库默认分支必须是main分支，且文件摆放格式与需要与BncrData下的一致，具体请参考Bncr官方库</p><h1 id="NO-3-对接聊天平台"><a href="#NO-3-对接聊天平台" class="headerlink" title="NO.3 对接聊天平台"></a>NO.3 <strong>对接聊天平台</strong></h1><p>打开网页 ‣ 点击下载zip包</p><p>下载保存至bncr 的 BncrData/plugins/红灯区/下</p><p>打开<code>奶酪.js</code> 修改第四行origin为team</p><p><img src="/images/bncr3.0/image1.png"></p><p>去插件市场下载下面插件（按需）</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Doraemon_config_tool.js</span><br><span class="line">Doraemon_sendNotify.ts</span><br><span class="line">Doraemon_tool.js</span><br><span class="line">Doraemon_一键安装所需依赖.js</span><br><span class="line">Doraemon_ql.js</span><br><span class="line">h5st.js</span><br><span class="line">Rebels_H.js</span><br><span class="line">Rebels_jdCommon.js</span><br><span class="line">redis_tool.js</span><br><span class="line">wx_active_tool.js</span><br><span class="line">查询.js</span><br><span class="line">登录.js</span><br><span class="line">qq.js</span><br><span class="line">HumanTG.js</span><br><span class="line">HumanTG_Expand.js</span><br><span class="line">tgBot.js</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>下载完输入“重启”，重启无界。</p><p>重启后输入<br><code>*Doraemon_一键安装所需依赖</code>* </p><p><em>等待依赖安装完成。安装完成后输入”重启”</em></p><p>留意重启的界面显示，如无报错则安装成功。</p><h3 id="对接NTQQ"><a href="#对接NTQQ" class="headerlink" title="对接NTQQ"></a>对接NTQQ</h3><p>插件市场下载qq.js，插件配置中找到qq.js，点击开启适配器，适配器模式 ws，保存</p><p>去QQ框架那边启用并添加反向ws协议，写入&nbsp;<code>ws://无界ip:9090/api/bot/qqws</code>，消息上报格式选择CQ码</p><p>NTQQ安装参考</p><p><a href="https://lmu5.com/ntqq.html">落幕屋 - 【NTQQ】Docker版本NTQQ结合了LiteLoaderQQNT与LLonebot等插件</a></p><h3 id="设置管理员"><a href="#设置管理员" class="headerlink" title="设置管理员"></a>设置管理员</h3><p>在web聊天窗口发送命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set qq admin 管理员QQ号</span><br></pre></td></tr></tbody></table></figure><p>要使配置生效，还需要再次重启无界</p><h3 id="对接TG人型"><a href="#对接TG人型" class="headerlink" title="对接TG人型"></a>对接TG人型</h3><p>必须有国外鸡或使用代理工具</p><p>参考<a href="https://www.notion.so/7c9d9f32530a4dbf8fcb173f650eb60a?pvs=21">【Faker教程】云服务器安装V2Ray</a></p><h3 id="内置"><a href="#内置" class="headerlink" title="内置"></a>内置</h3><p>需要科学上网环境或S5代理</p><p>访问&nbsp;<a href="https://my.telegram.org/">https://my.telegram.org/</a></p><p>输入自己的手机号码，国内手机号码需要前面➕86</p><p>填好手机号码，点“next”，会发送验证码，发完后回到Telegram，收到官方账号发的验证码copy，回到网页填上</p><p>选择API development tools，app title、shortname随便填，url 不用填，platform随便选?creatapplication</p><p>然后就能得到第三个参数BOT_API_ID和第四个参数BOT_API_HASH</p><p>插件市场下载适配器HumanTG.js，填写上面获取的apiID和apiHash，代理配置选填，保存，重启无界</p><p>无需设置管理员，默认自身就是管理员</p><p>如果出现错误需删除人形数据重新登录</p><p>在有管理员权限的平台发送：<code>del HumanTG session</code></p><h3 id="登录-1"><a href="#登录-1" class="headerlink" title="登录"></a>登录</h3><p>配置好内置人型后第一次启动无界时进入交互界面，按照提示输入注册TG的手机号、TG登录密码以及收到的验证码即可登录</p><h3 id="对接TgBot"><a href="#对接TgBot" class="headerlink" title="对接TgBot"></a>对接TgBot</h3><p>有科学上网环境不需要反代。无科学上网环境需要配置反代。</p><p><strong>注意：必须要有一个域名才可使用反代。</strong></p><p>打开TG,到<a href="https://t.me/BotFather">@BotFather</a> 中创建一个bot，记住token。</p><h3 id="反向代理设置"><a href="#反向代理设置" class="headerlink" title="反向代理设置"></a>反向代理设置</h3><p>推荐cf的worker，详细教程上网去搜</p><p>1、必须要域名，几块钱一年的也行，cf提供的免费域名不行。</p><p>2、设置完worker以后要设置路由。</p><p>参考教程 <a href="https://blog.csdn.net/z_162423/article/details/124953050">https://blog.csdn.net/z_162423/article/details/124953050</a></p><p><a href="https://www.cloudflare.com/zh-cn/">https://www.cloudflare.com/zh-cn/</a></p><p>注意修改第一行即可。XXXXX是你Bot token的<strong>数字部分，没有后面的英文</strong>，其他不变，要带/bot和：</p><p>worker代码</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">const whitelist = [<span class="string">"/botxxxxxxxxxx:"</span>];</span><br><span class="line">const tg_host = <span class="string">"api.telegram.org"</span>;</span><br><span class="line">addEventListener(<span class="string">'fetch'</span>, event =&gt; {</span><br><span class="line">    event.respondWith(handleRequest(event.request))</span><br><span class="line">})</span><br><span class="line"><span class="keyword">function</span> validate(path) {</span><br><span class="line">    <span class="keyword">for</span> (var i = 0; i &lt; whitelist.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (path.startsWith(whitelist[i]))</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">async <span class="keyword">function</span> handleRequest(request) {</span><br><span class="line">    var u = new URL(request.url);</span><br><span class="line">    u.host = tg_host;</span><br><span class="line">    <span class="keyword">if</span> (!validate(u.pathname))</span><br><span class="line">        <span class="built_in">return</span> new Response(<span class="string">'Unauthorized'</span>, {</span><br><span class="line">            status: 403</span><br><span class="line">        });</span><br><span class="line">    var req = new Request(u, {</span><br><span class="line">        method: request.method,</span><br><span class="line">        headers: request.headers,</span><br><span class="line">        body: request.body</span><br><span class="line">    });</span><br><span class="line">    const result = await fetch(req);</span><br><span class="line">    <span class="built_in">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>准备好反代和token，到无界插件市场下载tgbot.js  然后在输入“重启”</p><p>重启完成后在无界插件配置下打开适配器，然后输入反代和token，再重启。</p><p><img src="/images/bncr3.0/image2.png"><br>重启完成后,设置好tg管理员即可。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> tgBot admin 管理员ID</span><br></pre></td></tr></tbody></table></figure><h3 id="对接企业微信应用"><a href="#对接企业微信应用" class="headerlink" title="对接企业微信应用"></a><strong>对接企业微信应用</strong></h3><p>参考<a href="https://blog.csdn.net/2302_81707133/article/details/141056393">Bncr 无界3.0安装教程-CSDN博客</a></p><p>唯一需要注意的是本地服务器安装的不能用企业微信（除非你的公网IP是固定的），只能用企业客服或者公众号</p><p>首先插件市场订阅Merrickk</p><p><a href="https://github.com/Merrickk/BncrFiles"><code>https://github.com/Merrickk/BncrFiles</code></a></p><p>Merrickk github对接教程</p><p>微信客服对接简明教程<br>1.访问微信客服网址并注册开通 <a href="https://kf.weixin.qq.com/">https://kf.weixin.qq.com/</a><br>2.在“客服账号”创建一个客服账号<br>3.在“开发配置”修改回调配置，回调URL填“无界地址/api/bot/wxWorkKF”，Token和EncodingAESKey随机生成，先不要点“完成”<br>4.在无界安装依赖got @wecom/crypto xml2js form-data express-xml-bodyparser，重启无界，确保适配器正常加载<br>5.进入无界的WEB配置页面，启用适配器并填入corpId（企业ID）corpSecret（Secret）和encodingAESKey，保存<br>6.回到第3步的页面，点击完成，如提示成功则对接完成<br>7.在“开始接入”点击“在微信内其他场景接入”可以看到客服账号的链接，微信里点击这个链接就可以开启对话</p><p>注意： 1.要启用管理员功能请在已有管理员权限的平台输入set wxWorkKF admin 用户ID,给客服发送消息的时候在控制台可以看到用户ID<br>2.微信客服独立版和原来的企业微信客服不能共存，已经开通的需要去原来的企业微信把微信客服停用<br>3.有反馈说新开通的账号第5步的时候找不到corpSecret（Secret），要等第6步完成后才能出来，大家自测<br>4.第6步无法顺利完成的话可以在点击时候打开无界控制台看有没有收到请求，能收到请求可能是因为无界响应太慢（需要1秒以内），请自行优化</p><p>企业微信对接简明教程<br>1.访问企业微信网址并注册开通 <a href="https://work.weixin.qq.com/wework_admin/loginpage_wx">https://work.weixin.qq.com/wework_admin/loginpage_wx</a><br>2.在“应用管理”-“自建”创建一个应用，在“我的企业”获取企业ID并记录<br>3.进入应用，获取Secret值并记录，在“开发者接口”设置企业可信IP为无界机器人的外网IP 4.在“功能”-“接收消息”启用API接收。修改回调配置，回调URL填“无界地址/api/bot/wxWork”，Token和EncodingAESKey随机生成，先不要点“完成”<br>5.在无界安装依赖got @wecom/crypto xml2js form-data express-xml-bodyparser，重启无界，确保适配器正常加载<br>6.进入无界的WEB配置页面，启用适配器并填入 企业ID Secret和encodingAESKey，保存<br>7.回到第4步的页面，点击完成，如提示成功则对接完成<br>8.在“企业微信”客户端-“工作台”可以找到应用，开启对话，之后也可以在微信端点击进入对话</p><p>注意： 1.要启用管理员功能请在已有管理员权限的平台输入set wxWork admin 用户ID,给客服发送消息的时候在控制台可以看到用户ID<br>2.第7步无法顺利完成的话可以在点击时候打开无界控制台看有没有收到请求，能收到请求可能是因为无界响应太慢（需要1秒以内），请自行优化<br>3.微信里无法收到企业微信消息的需要去企业微信后台“我的企业”-“微信插件”-“设置”勾选“允许成员在微信插件中接收和回复聊天消息”</p><p>微信公众号对接简明教程<br>1.访问微信公众号网址并注册开通 <a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a><br>2.在“设置与开发”-“基本配置”获取AppID、AppSecret并记录，配置IP白名单。 3.填写服务器配置，回调URL填“无界地址/api/bot/wxMP”，填写Token，随机生成EncodingAESKey，消息加解密方式选“明文模式”，先不要点“完成”<br>4.在无界安装依赖got form-data express-xml-bodyparser，重启无界，确保适配器正常加载<br>5.进入无界的WEB配置页面，启用适配器并填入 AppID AppSecret Token EncodingAESKey，保存<br>6.回到第3步的页面，点击完成，如提示成功则对接完成</p><h1 id="N0-4-对接青龙面板"><a href="#N0-4-对接青龙面板" class="headerlink" title="N0.4 对接青龙面板"></a>N0.4 对接青龙面板</h1><p>青龙相关的功能都是基于奶酪插件实现的，但是红灯区还没有适配3.0，需要自行从<a href="https://github.com/RedLightsDistrict/Bncr_plugins">红灯区仓库</a>下载<code>奶酪.js</code>到无界的&nbsp;<code>/bncr/BncrData/plugins/红灯区</code>目录下</p><p>下载mod文件夹下&nbsp;<code>AmQlMod.js</code>、<code>AmTool.js</code>和&nbsp;<code>CryptoJS.js</code>到&nbsp;<code>mod</code>目录下</p><p>下载好后进入文件管理，编辑奶酪插件，将&nbsp;<code>origin</code>改成&nbsp;<code>team</code>保存</p><p>重启完成后打开青龙面板-系统设置-应用设置 为无界创建一个应用。</p><p><img src="/images/bncr3.0/image3.png"></p><p>Web交互聊天窗口使用管理员身份发送命令&nbsp;<code>面板管理</code>按照提示添加青龙面板，可添加多个，最后记得输入&nbsp;<code>wq</code>保存并退出</p><p><img src="/images/bncr3.0/image4.png"></p><h1 id="NO-5-对接青龙登录工具-查询资产"><a href="#NO-5-对接青龙登录工具-查询资产" class="headerlink" title="NO.5 对接青龙登录工具/查询资产"></a>NO.5 对接青龙登录工具/查询资产</h1><p>在前面的教程里，我们安装好了D佬的登录插件，对接好了青龙面板和Tgbot/人形/qq机器人。现在直接进行对接登录插件即可。</p><h3 id="对接工具设置"><a href="#对接工具设置" class="headerlink" title="对接工具设置"></a>对接工具设置</h3><p>首先自己安装好Pro/Rabbit，然后到无界网页端打开</p><p>以Nolan Pro面板为例，<strong>去随机生成一个带数字字母的字符串，两个位置写一样的就可以。</strong></p><p><img src="/images/bncr3.0/image5.png"></p><p><img src="/images/bncr3.0/image6.png"></p><p>进入web后台插件配置&nbsp;<code>/plugins/红灯区/登录.js</code>按照注释填写配置，带星号的必须填写。</p><p>rabbit容器id一般是2，如中间删过，后面又重新对接了，那就得写3，每删一次，就得往后加1。</p><p>登录/上车回复语自己设置。这里不设置的话，则默认使用插件内部回复语</p><p>注意：rabbitPro容器id哪怕没有也要填写一个0，否则无法保存，如果登录有莫名其妙的报错 请运行D佬的一键依赖并重启，got版本要在11.8.5，在任意有管理员权限的平台发：npm i&nbsp;<a href="mailto:got@11.8.5">got@11.8.5</a></p><p><img src="https://imgs.dsdog.tk/file/33f2383921d058428dc17.png" alt="https://imgs.dsdog.tk/file/33f2383921d058428dc17.png"></p><p>配置完以后记得保存，保存好到输入“重启”，然后到bot发送“上车”，自己测试下。</p><h3 id="查询狗东资产"><a href="#查询狗东资产" class="headerlink" title="查询狗东资产"></a>查询狗东资产</h3><p>插件市场下载D版<code>查询.js</code>插件，还需要下载依赖文件<code>h5st.js</code>，安装依赖&nbsp;<code>npm i date-fns</code>，进入插件配置，直接点击保存即可。</p><p>注意：如果查询有莫名其妙的报错 请运行D佬的<code>Doraemon_一键安装所需依赖.js</code>并重启，有火爆的话在<code>Doraemon_config_tool.js</code>插件下配置代理。got版本要在<strong>11.8.5</strong>，在任意有管理员权限的平台发：<code>npm i&nbsp;got@11.8.5</code></p><h1 id="N0-5-无界spy和监听配置"><a href="#N0-5-无界spy和监听配置" class="headerlink" title="N0.5 无界spy和监听配置"></a>N0.5 无界spy和监听配置</h1><p>无界spy可以代替spy，<strong>使用前必须对接了青龙面板，TgBot或者人形</strong>。</p><p><strong>1.从红灯区下载BncrSPY.js和mod下的文件</strong></p><p>1.1 自行编辑bncr\BncrData\plugins\红灯区\mod\SpyConfig.js</p><p>或者直接用别人写好的模板</p><p>修改完需要重启才能生效</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">必填项目：</span><br><span class="line"><span class="comment">/* 监控列表 */</span></span><br><span class="line">    ListenList: [</span><br><span class="line">        {</span><br><span class="line">            Name: <span class="string">'6666'</span>, <span class="comment">//备注</span></span><br><span class="line">            Id: <span class="string">'6666666666'</span>, <span class="comment">//群id/频道id</span></span><br><span class="line">选填项目:</span><br><span class="line"><span class="comment">/* 运行日志输出位置,例如错误运行日志/任务运行成功等日志,只能设置1个 */</span></span><br><span class="line">runLogsInfo: {</span><br><span class="line">        platform: <span class="string">'HumanTG'</span>, <span class="comment">//发送平台</span></span><br><span class="line">        toGroupOrUser: <span class="string">'groupId'</span>, <span class="comment">//通知类型,个人userId //群groupId</span></span><br><span class="line">        Id: <span class="string">'-1001842786543'</span>, <span class="comment">//个人id 或群id</span></span><br><span class="line">    },</span><br><span class="line">    <span class="comment">/* 静默后监控结果输出位置  可填多个*/</span></span><br><span class="line">    TabooLogsInfo: [</span><br><span class="line">        {</span><br><span class="line">            platform: <span class="string">'HumanTG'</span>, <span class="comment">//发送平台</span></span><br><span class="line">            toGroupOrUser: <span class="string">'groupId'</span>, <span class="comment">//通知类型,个人userId //群groupId</span></span><br><span class="line">            Id: <span class="string">'-100666666666666'</span>, <span class="comment">//个人id 或群id</span></span><br><span class="line">        },</span><br><span class="line">Copy</span><br></pre></td></tr></tbody></table></figure><p>实例：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">            Name: <span class="string">'【M】幸运抽奖'</span>,</span><br><span class="line">            <span class="comment">/* 执行的脚本名 */</span></span><br><span class="line">            Script: <span class="string">'m_jd_wx_luckDraw.js'</span>,</span><br><span class="line">            <span class="comment">/* 监听变量 */</span></span><br><span class="line">            ListenEnv: [<span class="string">'M_WX_LUCK_DRAW_URL'</span>,<span class="string">'GZSL_DRAW_URL'</span>,<span class="string">'jd_lzkj_loreal_draw_url'</span>],</span><br><span class="line">             <span class="comment">/* 转换变量 */</span></span><br><span class="line">            SetEnv: {</span><br><span class="line">                GZSL_DRAW_URL: <span class="string">'M_WX_LUCK_DRAW_URL'</span>,</span><br><span class="line">                jd_lzkj_loreal_draw_url: <span class="string">'M_WX_LUCK_DRAW_URL'</span>,</span><br><span class="line">            },</span><br><span class="line">           <span class="comment">/* 具体怎么装换 左转换→监听 */</span></span><br><span class="line">            execRegExp: [<span class="string">'(?&lt;=activityId(=|%3D))[^&amp;% ]+'</span>],</span><br><span class="line">            TimeOut: <span class="number">60</span>,</span><br><span class="line">              <span class="comment">/* 超时退出 (秒)*/</span></span><br><span class="line">            Interval: <span class="number">0</span>,</span><br><span class="line">             <span class="comment">/* 间隔时间(秒) */</span></span><br><span class="line">            RunPanel: [<span class="number">0</span>],</span><br><span class="line">                       <span class="comment">/* 运行面板 0 代表 面板管理中的第一个容器 以此类推 非超授只能用第一个面板 */</span></span><br><span class="line">            Disable: false,</span><br><span class="line">                       <span class="comment">/* 禁用任务 */</span></span><br><span class="line">        },</span><br><span class="line">Copy</span><br></pre></td></tr></tbody></table></figure><p><strong>也可以参考Faker大佬的教程<a href="https://www.notion.so/4eecfc93c2464e9b956a4f1466704efb?pvs=21">N0.4 无界spy和监听配置</a></strong></p><p><strong>2.监听群组</strong></p><p>1.可以发消息的群组直接发送</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">监听该群</span><br><span class="line">不回复该群（推荐 不然等着被ban）</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><strong>或在用户配置→监听群列表添加需要监听的群或频道（如果频道或群组不能发消息的时候可以用）</strong></p><p><strong>3.配置解析</strong></p><p>自行编辑bncr\BncrData\plugins\官方插件\mod\SpyHandleMsg.js</p><p>只要是spy配置文件的监控列表以及监听群组列表都有群组频道发送了活动链接</p><p>就自动解析+运行</p><p>举例：</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">            <span class="attr">keyword</span>: <span class="regexp">/lzkj-isv\.isvj(clou)?d\.com\/wxGameActivity/</span>, <span class="comment">//不懂得看活动链接的特征 照抄</span></span><br><span class="line">            <span class="attr">name</span>: <span class="string">'M无线游戏'</span>, <span class="comment">//活动名或者脚本名</span></span><br><span class="line">            <span class="attr">trans</span>: [</span><br><span class="line">                {</span><br><span class="line">                    <span class="attr">ori</span>: <span class="string">'-1'</span>, <span class="comment">//-1是整个活动链接</span></span><br><span class="line">                    <span class="attr">redi</span>: <span class="string">'M_WX_GAME_URL'</span>, <span class="comment">//M无线游戏 //</span></span><br><span class="line">                },</span><br><span class="line">            ],</span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">            <span class="attr">keyword</span>: <span class="regexp">/lzkj-isv\.isvj(clou)?d.com\/wxgame/</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">'LZ游戏活动'</span>,</span><br><span class="line">            <span class="attr">trans</span>: [</span><br><span class="line">                {</span><br><span class="line">                    <span class="attr">ori</span>: <span class="string">'activityId'</span>, <span class="comment">//activityId就是截取上面活动链接里的activityId到下面环境变量里</span></span><br><span class="line">                    <span class="attr">redi</span>: <span class="string">'WXGAME_ACT_ID'</span>, <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">                },</span><br><span class="line">            ],</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><strong>如果自己发的链接会被解析，在spyConfig里加spyjx:’j’，则管理员发的https链接必须以j开头才会被插件解析</strong></p><p>注：没反应的问题自己检查有没有监听该群，spy里有没有白名单，有没有规则，解析规则对不对。跑过的线报会保存在数据库变为旧线报忽略，可定时发送命令”spy清空列队“，或在官方插件里的定时任务里添加定时任务</p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;</summary>
    
    
    
    
    <category term="Bncr" scheme="https://wangbo777.github.io/tags/Bncr/"/>
    
  </entry>
  
  <entry>
    <title>Hexo入门</title>
    <link href="https://wangbo777.github.io/2024/08/08/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>https://wangbo777.github.io/2024/08/08/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/</id>
    <published>2024-08-08T14:05:54.000Z</published>
    <updated>2024-09-09T08:00:53.387Z</updated>
    
    <content type="html"><![CDATA[<hr><span id="more"></span><p>创建新文章</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n</span><br></pre></td></tr></tbody></table></figure><p>清除掉旧的数据</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></tbody></table></figure><p>生成新的页面</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></tbody></table></figure><p>本地预览</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></tbody></table></figure><p>部署到Github</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><h4 id="所有博客显示未命名-untitled"><a href="#所有博客显示未命名-untitled" class="headerlink" title="所有博客显示未命名(untitled)"></a>所有博客显示未命名(untitled)</h4><p>刚开始写的博客都是通过自己创建MarkDown文件导入到post中的，所以自然没有前缀，解决方式如下即可</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#以如下格式输入相应的字段</span><br><span class="line">---</span><br><span class="line">title: hexo入门</span><br><span class="line">date: 2024-08-08 22:05:54</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line">#####正文内容</span><br></pre></td></tr></tbody></table></figure><p>hexo在generate的时候会自动索引当前文件的标题、时间和tags等</p><h4 id="博客首页折叠"><a href="#博客首页折叠" class="headerlink" title="博客首页折叠"></a>博客首页折叠</h4><p>部署后发现首页的文章都是全部预览的，但别人的都是有个<strong>阅读全文</strong>，其实在MD文件中添加一行代码就搞定了</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#####首页显示内容</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">#####隐藏内容</span><br></pre></td></tr></tbody></table></figure><h4 id="hexo部署后，CNAME会被自动删除"><a href="#hexo部署后，CNAME会被自动删除" class="headerlink" title="hexo部署后，CNAME会被自动删除"></a>hexo部署后，CNAME会被自动删除</h4><p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等</p><h4 id="hexo创建新文章"><a href="#hexo创建新文章" class="headerlink" title="hexo创建新文章"></a>hexo创建新文章</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new "your file name"</span><br></pre></td></tr></tbody></table></figure><p>该命令会在source/_post/目录下生成一个your-file-name.md文件，文件会默认附带标题、时间和tag/category等开头，如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo搭建博客的几个小问题</span><br><span class="line">date: 2024-08-08 22:05:54</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h4 id="hexo创建新的分类"><a href="#hexo创建新的分类" class="headerlink" title="hexo创建新的分类"></a>hexo创建新的分类</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page "your page name"</span><br></pre></td></tr></tbody></table></figure><p>此时需要在scaffolds/post.md文件中添加一行你的分类，例如：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: {{ title }}</span><br><span class="line">date: {{ date }}</span><br><span class="line">tags:</span><br><span class="line">categories: # 添加该行，新增的分类</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h4 id="hexo创建草稿"><a href="#hexo创建草稿" class="headerlink" title="hexo创建草稿"></a>hexo创建草稿</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft "your draft file name"</span><br></pre></td></tr></tbody></table></figure><p>该命令会在source/下创建一个与**_post<strong>对应的</strong>_draft**文件夹，其中存放待编辑的草稿，而草稿不会影响正常的生成（hexo generate）部署（hexo deploy）</p><h4 id="hexo草稿预览"><a href="#hexo草稿预览" class="headerlink" title="hexo草稿预览"></a>hexo草稿预览</h4><p>如果需要预览草稿可以使用下面的命令进行预览</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server --draft</span><br></pre></td></tr></tbody></table></figure><h4 id="hexo草稿发布"><a href="#hexo草稿发布" class="headerlink" title="hexo草稿发布"></a>hexo草稿发布</h4><p>草稿编写完成后需要生成到public中并且进行部署，使用如下命令即可：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish "your draft file name"</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>玩客云Armbian(CasaOS)使用指南</title>
    <link href="https://wangbo777.github.io/2024/08/08/%E7%8E%A9%E5%AE%A2%E4%BA%91Armbian(CasaOS)%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>https://wangbo777.github.io/2024/08/08/%E7%8E%A9%E5%AE%A2%E4%BA%91Armbian(CasaOS)%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2024-08-08T14:05:54.000Z</published>
    <updated>2024-09-09T07:52:43.590Z</updated>
    
    <content type="html"><![CDATA[<hr><span id="more"></span><h3 id="一键换源"><a href="#一键换源" class="headerlink" title="一键换源"></a><strong>一键换源</strong></h3><p>系统源</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh)</span><br></pre></td></tr></tbody></table></figure><p>Docker源</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/DockerInstallation.sh)</span><br></pre></td></tr></tbody></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h3 id="玩客云CasaOS商店专属源"><a href="#玩客云CasaOS商店专属源" class="headerlink" title="玩客云CasaOS商店专属源"></a><strong>玩客云</strong>CasaOS商店专属源</h3><p>​                ● <strong>arm/armv7/armhf</strong> (玩客云 等)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://play.cuse.eu.org/Cp0204-AppStore-Play-arm.zip</span><br></pre></td></tr></tbody></table></figure><h3 id="修改LED灯颜色-0为关闭-1为开启"><a href="#修改LED灯颜色-0为关闭-1为开启" class="headerlink" title="修改LED灯颜色 0为关闭, 1为开启"></a><strong>修改LED灯颜色 0为关闭, 1为开启</strong></h3><p>配置即时生效：例【蓝色】</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo 0 &gt; /sys/class/leds/onecloud:red:alive/brightness</span><br><span class="line">echo 1 &gt; /sys/class/leds/onecloud:blue:alive/brightness</span><br><span class="line">echo 0 &gt; /sys/class/leds/onecloud:green:alive/brightness</span><br></pre></td></tr></tbody></table></figure><p>配置永久生效：例【蓝色】</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nano /sys/class/leds/onecloud:blue:alive/brightness</span><br><span class="line">1</span><br><span class="line">nano /sys/class/leds/onecloud:red:alive/brightness</span><br><span class="line">0</span><br><span class="line">nano /sys/class/leds/onecloud:green:alive/brightness</span><br><span class="line">0</span><br></pre></td></tr></tbody></table></figure><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a><strong>进阶</strong></h2><h2 id="OneCloud-设备-LED-控制程序"><a href="#OneCloud-设备-LED-控制程序" class="headerlink" title="OneCloud 设备 LED 控制程序"></a><strong>OneCloud 设备 LED 控制程序</strong></h2><h4 id="项目地址：Lance-He-OneCloud-LED-github-com"><a href="#项目地址：Lance-He-OneCloud-LED-github-com" class="headerlink" title="项目地址：Lance-He/OneCloud-LED (github.com)"></a><strong>项目地址：</strong><a href="https://github.com/Lance-He/OneCloud-LED?tab=readme-ov-file#onecloud-%E8%AE%BE%E5%A4%87-led-%E6%8E%A7%E5%88%B6%E7%A8%8B%E5%BA%8F">Lance-He/OneCloud-LED (github.com)</a></h4><p>本项目为 玩客云OneCloud 设备提供一个自制的 LED 控制程序，基于 hzyitc 大佬的 Armbian 镜像开发，兼容大部分 Debian 系列发行版。让您轻松控制设备的 LED 状态。</p><p>作者：Lance </p><p><strong>环境需求：</strong></p><p>​                ● 基于 hzyitc 大佬的 Armbian 镜像：“Linux onecloud 5.15.93-meson #23.02.2 SMP Fri Feb 17 22:38:47 UTC 2023 armv7l armv7l armv7l GNU/Linux”</p><p>​                ● 兼容大部分 Debian 系列发行版</p><p>​                ● 用户需要具备基本的 Linux 系统操作知识</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a><strong>功能</strong></h3><p>​                ● 可设置关闭 LED 时间和开启 LED 时间，让您在夜晚享受宁静的睡眠</p><p>​                ● 根据 CPU 使用率动态调整 LED 灯光颜色</p><h3 id="LED-颜色与-CPU-使用率对应表"><a href="#LED-颜色与-CPU-使用率对应表" class="headerlink" title="LED 颜色与 CPU 使用率对应表"></a><strong>LED 颜色与 CPU 使用率对应表</strong></h3><table><thead><tr><th><strong>颜色</strong></th><th><strong>CPU 使用率</strong></th></tr></thead><tbody><tr><td>红</td><td>80%-100%</td></tr><tr><td>紫</td><td>60%-79%</td></tr><tr><td>黄</td><td>40%-59%</td></tr><tr><td>青</td><td>20%-39%</td></tr><tr><td>白</td><td>0%-19%</td></tr></tbody></table><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a><strong>使用方法</strong></h3><p>​            1.     将 /bin 目录下的 main 文件复制到玩客云的用户目录下，例如 /root/main</p><p>​            2.     启动方式： cd /root/ chmod +x main ./main “16:35:00” “16:50:00”</p><p>​            3.     使用 Ctrl+C 结束进程</p><h3 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a><strong>设置开机自启</strong></h3><p>​            1.     修改 /etc/rc.local 文件</p><p>​            2.     在文件的 exit 0 之前插入以下内容： /root/main “16:35:00” “16:50:00” &amp;</p><p>​            3.     保存即可</p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;</summary>
    
    
    
    
    <category term="玩客云" scheme="https://wangbo777.github.io/tags/%E7%8E%A9%E5%AE%A2%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Debian/ubuntu一键安装小雅emby全家桶+家庭影院服务器</title>
    <link href="https://wangbo777.github.io/2024/03/15/2024-03-15-Debianubuntu%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%B0%8F%E9%9B%85emby%E5%85%A8%E5%AE%B6%E6%A1%B6+%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%99%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://wangbo777.github.io/2024/03/15/2024-03-15-Debianubuntu%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%B0%8F%E9%9B%85emby%E5%85%A8%E5%AE%B6%E6%A1%B6+%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%99%A2%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-03-15T01:25:00.000Z</published>
    <updated>2024-09-09T07:39:19.028Z</updated>
    
    <content type="html"><![CDATA[<hr><span id="more"></span><p>视频教程</p><p><a href="https://www.bilibili.com/video/BV1vK421x7eM/?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1vK421x7eM/?spm_id_from=333.999.0.0</a></p><p>安装常用软件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y curl wget sudo bash</span><br></pre></td></tr></tbody></table></figure><p>debian默认不能root用户直接登录，我们需要修改下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/ssh/sshd_config</span><br></pre></td></tr></tbody></table></figure><p>找到并用#注释掉这行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin prohibit-password</span><br></pre></td></tr></tbody></table></figure><p>新建一行 添加</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin yes</span><br></pre></td></tr></tbody></table></figure><p>重启服务</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></tbody></table></figure><p>一键更新（先更新一下）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt full-upgrade -y &amp;&amp; apt autoremove -y &amp;&amp; apt autoclean -y</span><br></pre></td></tr></tbody></table></figure><p>挂载U盘</p><p>查看挂载情况</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></tbody></table></figure><p>Debian 开机自动挂载磁盘</p><p>查看磁盘所有UUID</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid</span><br></pre></td></tr></tbody></table></figure><p>编辑/etc/fstab文件, 在文件尾部添加需要挂载磁盘的UUID 并添加一些信息例如 ↓<br><code>UUID=******* /home/h1/ ext4 defaults 0 2</code><br>UUID是磁盘的信息标签, /home/h1是挂载的文件夹, txt4是磁盘格式, defaults 默认.<br>第一个数字：0表示开机不检查磁盘，1表示开机检查磁盘；<br>第二个数字：0表示交换分区，1代表启动分区（Linux），2表示普通分区</p><p>安装docker</p><p>这里用脚本吧，选择一种方式<br>一键脚本（工具箱}<br><code>curl -sS -O https://kejilion.pro/kejilion.sh &amp;&amp; chmod +x kejilion.sh &amp;&amp; ./kejilion.sh</code><br>docker一键脚本<br><code>bash &lt;(curl -sSL https://linuxmirrors.cn/docker.sh)</code></p><p>安装小雅<br>官网地址： <a href="https://github.com/DDS-Derek/xiaoya-alist">https://github.com/DDS-Derek/xiaoya-alist</a><br><code>bash -c "$(curl -sLk https://ddsrem.com/xiaoya_install.sh)"</code></p><p>需要两个token和一个id<br>短token：<a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive.html">https://alist.nn.ci/zh/guide/drivers/aliyundrive.html</a><br>长token：<a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html">https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html</a><br>文件夹id：<a href="https://www.alipan.com/">https://www.alipan.com/</a><br>阿里云盘的资源盘建立一个文件夹，然后填入地址栏中的id</p><p>推荐使用host模式</p><p>web界面<br>http://自己的ip地址:5678/<br>这里是正常的 等的几分钟刷新一下</p><p>emby全家桶</p><ol><li>安装需要的条件：</li></ol><p>1.1. 正确安装小雅Docker版，并可以正常使用。</p><p>1.2. 硬盘空间有160G剩余空间。</p><ol><li>在我们刚刚挂载点硬盘上创建文件夹，例如/home/h1/xiaoyaemby</li><li>使用命令开始安装</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c "$(curl -sLk https://ddsrem.com/xiaoya_install.sh)"</span><br></pre></td></tr></tbody></table></figure><p>默认使用官方emby，可自行选择开心版1.3<br>看一下目录是否正确，回车<br>一路回车，开始拉去resilio镜像<br>这里默认早上六点更新同步，自己更改或者默认<br>我这里选择14天</p><ol><li>安装完毕之后，使用2345或者6908端口进行登录emby。<br>例如：<a href="http://192.168.1.28:2345/">http://192.168.1.28:2345/</a><br>用户名：<code>xiaoya</code><br>密码：<code>1234</code></li></ol><p>阿里云盘缓存清理</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c "$(curl -sLk https://ddsrem.com/xiaoya_install.sh)"</span><br></pre></td></tr></tbody></table></figure><ol><li>xiaoyakeeper</li></ol><p>github地址<br><a href="https://github.com/DDS-Derek/xiaoya-alist/blob/master/xiaoyahelper/README.md">https://github.com/DDS-Derek/xiaoya-alist/blob/master/xiaoyahelper/README.md</a></p><ol><li>Alist-tvbox</li></ol><p>自带清理缓存文件工具<br>用户名密码都是admin</p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
